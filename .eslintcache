[{"/Users/miku/code/react/widowmaker/src/index.tsx":"1","/Users/miku/code/react/widowmaker/src/reportWebVitals.ts":"2","/Users/miku/code/react/widowmaker/src/App.tsx":"3","/Users/miku/code/react/widowmaker/src/redux/index.ts":"4","/Users/miku/code/react/widowmaker/src/redux/reducer.ts":"5","/Users/miku/code/react/widowmaker/src/pages/login/index.tsx":"6","/Users/miku/code/react/widowmaker/src/redux/saga/sagas/index.ts":"7","/Users/miku/code/react/widowmaker/src/redux/saga/reducers/index.ts":"8","/Users/miku/code/react/widowmaker/src/redux/thunk/reducers/index.ts":"9","/Users/miku/code/react/widowmaker/src/redux/saga/sagas/user/index.ts":"10","/Users/miku/code/react/widowmaker/src/redux/saga/reducers/common/index.ts":"11","/Users/miku/code/react/widowmaker/src/redux/saga/reducers/user/index.ts":"12","/Users/miku/code/react/widowmaker/src/redux/saga/actions/user.ts":"13","/Users/miku/code/react/widowmaker/src/redux/thunk/reducers/menu/index.ts":"14","/Users/miku/code/react/widowmaker/src/redux/saga/actions/common.ts":"15","/Users/miku/code/react/widowmaker/src/redux/saga/extendRoutines.ts":"16","/Users/miku/code/react/widowmaker/src/redux/thunk/actions/menu.ts":"17","/Users/miku/code/react/widowmaker/src/constants/namespace/index.ts":"18","/Users/miku/code/react/widowmaker/src/pages/login/background/index.tsx":"19","/Users/miku/code/react/widowmaker/src/pages/login/layout/index.tsx":"20","/Users/miku/code/react/widowmaker/src/pages/login/form/index.tsx":"21","/Users/miku/code/react/widowmaker/src/hooks/useActions.ts":"22","/Users/miku/code/react/widowmaker/src/http/user/index.ts":"23","/Users/miku/code/react/widowmaker/src/http/http.ts":"24","/Users/miku/code/react/widowmaker/src/utils/md5.ts":"25","/Users/miku/code/react/widowmaker/src/router/index.tsx":"26","/Users/miku/code/react/widowmaker/src/layout/index.tsx":"27"},{"size":568,"mtime":1610243687765,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1610176582149,"results":"30","hashOfConfig":"29"},{"size":169,"mtime":1610439060433,"results":"31","hashOfConfig":"29"},{"size":715,"mtime":1610258551817,"results":"32","hashOfConfig":"29"},{"size":401,"mtime":1610258462139,"results":"33","hashOfConfig":"29"},{"size":871,"mtime":1610436422229,"results":"34","hashOfConfig":"29"},{"size":185,"mtime":1610255414527,"results":"35","hashOfConfig":"29"},{"size":172,"mtime":1610254534830,"results":"36","hashOfConfig":"29"},{"size":112,"mtime":1610258800968,"results":"37","hashOfConfig":"29"},{"size":855,"mtime":1610438098045,"results":"38","hashOfConfig":"29"},{"size":590,"mtime":1610245834582,"results":"39","hashOfConfig":"29"},{"size":785,"mtime":1610436031127,"results":"40","hashOfConfig":"29"},{"size":374,"mtime":1610256142902,"results":"41","hashOfConfig":"29"},{"size":277,"mtime":1610258774377,"results":"42","hashOfConfig":"29"},{"size":435,"mtime":1610247256967,"results":"43","hashOfConfig":"29"},{"size":1418,"mtime":1610247255500,"results":"44","hashOfConfig":"29"},{"size":37,"mtime":1610258655034,"results":"45","hashOfConfig":"29"},{"size":158,"mtime":1610254146647,"results":"46","hashOfConfig":"29"},{"size":502,"mtime":1610354093321,"results":"47","hashOfConfig":"29"},{"size":583,"mtime":1610354431110,"results":"48","hashOfConfig":"29"},{"size":1933,"mtime":1610436256641,"results":"49","hashOfConfig":"29"},{"size":1051,"mtime":1610247262502,"results":"50","hashOfConfig":"29"},{"size":221,"mtime":1610442051329,"results":"51","hashOfConfig":"29"},{"size":5244,"mtime":1610438016456,"results":"52","hashOfConfig":"29"},{"size":150,"mtime":1610421557235,"results":"53","hashOfConfig":"29"},{"size":429,"mtime":1610439052558,"results":"54","hashOfConfig":"29"},{"size":136,"mtime":1610438899712,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1nn9n24",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miku/code/react/widowmaker/src/index.tsx",[],["119","120"],"/Users/miku/code/react/widowmaker/src/reportWebVitals.ts",[],"/Users/miku/code/react/widowmaker/src/App.tsx",[],"/Users/miku/code/react/widowmaker/src/redux/index.ts",[],"/Users/miku/code/react/widowmaker/src/redux/reducer.ts",[],"/Users/miku/code/react/widowmaker/src/pages/login/index.tsx",["121"],"import Layout from 'antd/lib/layout/layout';\nimport React, { memo } from 'react';\nimport Background from './background';\nimport LoginLayout from './layout';\nimport LoginForm from './form';\nimport { loginAction } from '../../redux/saga/actions/user';\nimport useActions from '../../hooks/useActions';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './index.less';\ninterface IProps {}\n\nconst Login: React.FC<IProps> = (props: IProps) => {\n  const action = useActions({\n    loginAction\n  });\n\n  const { isLogin, loading } = useSelector((state: IState) => state.user);\n  if (isLogin) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"login\">\n      <LoginLayout>\n        <LoginForm loading={loading} fetch={action.loginAction} />\n      </LoginLayout>\n      <Background />\n    </div>\n  );\n};\n\nexport default memo(Login);\n","/Users/miku/code/react/widowmaker/src/redux/saga/sagas/index.ts",[],"/Users/miku/code/react/widowmaker/src/redux/saga/reducers/index.ts",[],"/Users/miku/code/react/widowmaker/src/redux/thunk/reducers/index.ts",[],"/Users/miku/code/react/widowmaker/src/redux/saga/sagas/user/index.ts",["122"],"/Users/miku/code/react/widowmaker/src/redux/saga/reducers/common/index.ts",["123"],"/**\n * 公共的reducer数据\n * 比如超时提示，公共的数据接口之类\n */\nimport { setRetryTip } from '../../actions/common';\n\nconst initialState = {\n  retryTip: false\n};\n\nexport default (state = initialState, action: ActionParams) => {\n  switch (action.type) {\n    // TRIGGER ==> 发起请求的时候\n    // SUCCESS ==> 成功的时候\n    // FAILURE ==> 失败的时候\n    // FULFILL ==> 完成的时候\n    // REQUEST ==> 一般不在这里使用\n    case setRetryTip.TRIGGER: {\n      return {\n        ...state,\n        retryTip: true\n      };\n    }\n  }\n  return state;\n};\n","/Users/miku/code/react/widowmaker/src/redux/saga/reducers/user/index.ts",["124","125","126"],"import { stat } from 'fs';\nimport LoginForm from '../../../../pages/login/form';\nimport { loginAction } from '../../actions/user';\n\nconst initialState = {\n  isLogin: false,\n  loading: false\n};\n\nexport default function (state = initialState, action: ActionParams) {\n  switch (action.type) {\n    case loginAction.TRIGGER: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case loginAction.SUCCESS: {\n      console.log('登陆成功');\n      return {\n        ...state,\n        isLogin: true\n      };\n    }\n    case loginAction.FAILURE: {\n      console.log('登陆出错');\n      return {\n        ...state\n      };\n    }\n    case loginAction.FULFILL: {\n      return {\n        ...state,\n        loading: false\n      };\n    }\n    default:\n      return state;\n  }\n}\n","/Users/miku/code/react/widowmaker/src/redux/saga/actions/user.ts",[],"/Users/miku/code/react/widowmaker/src/redux/thunk/reducers/menu/index.ts",["127"],"import { SET_MENU } from '../../actions/menu';\n\nconst initialState = {};\n\nexport default function (state = initialState, action: ActionParams) {\n  switch (action.type) {\n    case SET_MENU: {\n      return {\n        ...state\n      };\n    }\n    default:\n      return state;\n  }\n}\n","/Users/miku/code/react/widowmaker/src/redux/saga/actions/common.ts",["128","129"],"import { createRoutine, promisifyRoutine } from 'redux-saga-routines';\nimport extendRoutine from '../extendRoutines';\nimport NAME_SPACE from '../../../constants/namespace';\n\n\n\n// 超时提示，发送请求，如果发送失败，就会重试请求，\n// 超过约定的重试次数过后(axios二次封装的时候处理)就会触发action，提示用户请求超时\nexport const setRetryTip = createRoutine(`${NAME_SPACE.COMMON}`);\n\n","/Users/miku/code/react/widowmaker/src/redux/saga/extendRoutines.ts",[],"/Users/miku/code/react/widowmaker/src/redux/thunk/actions/menu.ts",[],"/Users/miku/code/react/widowmaker/src/constants/namespace/index.ts",[],"/Users/miku/code/react/widowmaker/src/pages/login/background/index.tsx",[],"/Users/miku/code/react/widowmaker/src/pages/login/layout/index.tsx",["130"],"import React from 'react';\n\ninterface IProps {}\n\nconst Layout: React.FC<IProps> = props => {\n  return (\n    <div className=\"login-layout\">\n      <div className=\"login-layout-container\">\n        <img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1133515339,2294936858&fm=26&gp=0.jpg\"></img>\n        <header className=\"login-layout-container-header\">\n          <h1>积糖</h1>\n          <h2>与世界分享你的收藏</h2>\n        </header>\n        {props.children}\n        <div className=\"login-footer\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","/Users/miku/code/react/widowmaker/src/pages/login/form/index.tsx",[],"/Users/miku/code/react/widowmaker/src/hooks/useActions.ts",["131","132"],"import { useMemo, DependencyList } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport {\n  ActionCreatorFunction,\n  bindPromiseCreators,\n  PromiseCreator,\n  Routine\n} from 'redux-saga-routines';\n\ntype actionType = Routine | PromiseCreator | ActionCreatorFunction;\n\nfunction useActions(\n  actions: {\n    [key: string]: actionType;\n  },\n  deps?: DependencyList | undefined\n): any {\n  const dispatch = useDispatch();\n  return useMemo(\n    () => {\n      const newActions = actions;\n      const keys = Object.keys(actions);\n      keys.forEach((key: string) => {\n        if (newActions[key].length === 2) {\n          newActions[key] = bindPromiseCreators(\n            actions[key] as PromiseCreator,\n            dispatch\n          );\n        } else {\n          newActions[key] = bindActionCreators(\n            actions[key] as Routine,\n            dispatch\n          );\n        }\n      });\n      return newActions;\n    },\n    deps ? [dispatch, ...deps] : [dispatch]\n  );\n}\n\nexport default useActions;\n","/Users/miku/code/react/widowmaker/src/http/user/index.ts",[],"/Users/miku/code/react/widowmaker/src/http/http.ts",["133"],"/**\n * 基于axios二次封装\n */\n\nimport AxiosInstance, {\n  AxiosStatic,\n  AxiosPromise,\n  AxiosError,\n  AxiosRequestConfig,\n  AxiosResponse\n} from 'axios';\nimport { message } from 'antd';\nimport { setRetryTip } from '../redux/saga/actions/common';\nimport store from '../redux';\n\n// 定义请求的参数类型声明\ntype requestFn = (\n  url: string,\n  params?: Object,\n  data?: Object | null\n) => AxiosPromise;\n\nclass Http {\n  // 请求对象\n  private axios: AxiosStatic = AxiosInstance;\n  // 请求失败时间 重试请求的间隔时间\n  private retryDelay: number = 1000;\n  // 重试次数\n  // 一般生产10次 开发环境4次， 根据需要来调整\n  private retry: number = Number(process.env.REACT_APP_RETRY) || 4;\n  constructor() {\n    const { axios } = this;\n    axios.defaults.timeout = 10000;\n    axios.defaults.baseURL = process.env.REACT_APP_API_URL;\n    axios.defaults.headers = {\n      'Content-Type': 'application/json;charset=utf-8'\n    };\n    // 去执行请求拦截器和响应拦截器；\n    this.useInterceptResponse();\n    this.useInterceptRequest();\n  }\n  // 请求拦截器\n  useInterceptRequest() {\n    this.axios.interceptors.request.use(\n      async (config: AxiosRequestConfig) => {\n        const newConfig = config;\n        // 登陆token\n        // const token = LocalStorage.getToken()\n        const token = 'widowmaker';\n        if (token) newConfig.headers['Authorize'] = token;\n        return config;\n      },\n      (error: AxiosError) => Promise.reject(error)\n    );\n  }\n  // 响应拦截器\n  useInterceptResponse() {\n    this.axios.interceptors.response.use(\n      res => {\n        if (res.data.code === 50001) message.error('服务器错误,请联系管理员');\n        // token过期\n        else if (res.data.code === 50002) {\n          message.error('身份信息已经过期，请重新登录');\n          // TODO: 跳转到login页面\n        }\n        if (res.data.code !== 40000) {\n          message.error(res.data.msg || '服务器异常');\n          return Promise.reject(res.data.msg);\n        }\n        return Promise.resolve(res.data);\n      },\n      (error: AxiosError) => {\n        // 请求出错，一般是服务器问题\n        const { config } = error;\n        let retryCount = config.headers['axios-retry'] || 0;\n        if (retryCount >= this.retry) {\n          // 通知redux重试次数超过限制，修改状态，组件内自动感应，变为true过后，会提示用户\n          store.dispatch(setRetryTip(true));\n          return Promise.reject(error);\n        }\n        retryCount += 1;\n        const backoff = new Promise<void>(resolve => {\n          setTimeout(() => {\n            resolve();\n          }, this.retryDelay || 1);\n        });\n        // 修改重试次数\n        config.headers['axios-retry'] = retryCount;\n\n        // if(error.response){\n\n        // }\n\n        return backoff.then(() => {\n          this.axios(config);\n        });\n      }\n    );\n  }\n\n  /**\n   * 封装底层的公用方法\n   * @Params\n   * types: 请求的方式GET POST\n   * url: 请求的路径\n   * options: 请求的参数\n   * isComplex: 是否平铺参数 一般用于get\n   *  eg: [a:1,b:2] isComplex === true 会转化为a=1&b=2\n   */\n  private fetchData(\n    type: string,\n    url: string,\n    options?: Object,\n    isComplex?: boolean\n  ) {\n    // if (isComplex) {\n    //   return this.axios[type](url, null, options);\n    // }\n    return this.axios[type](url, options);\n  }\n  /**\n   * post put patch delete 逻辑处理都一样\n   * 把底层函数封装直接调用\n   */\n  private commonRequest(\n    type: string,\n    url: string,\n    params?: Object,\n    data?: Object | null\n  ): AxiosPromise {\n    // 合并一下参数\n    let options: Object = {\n      params,\n      data\n    };\n\n    if (params && data === undefined) {\n      options = {\n        data: params\n      };\n    }\n    if (data === null) {\n      options = {\n        params\n      };\n    }\n    return this.fetchData(type, url, options, true);\n  }\n  /**\n   * get请求方式\n   * @Params\n   * url 请求地址\n   * params 请求参数\n   *\n   */\n  public get(url: string, params?: Object | undefined): requestFn {\n    // get可以不传参数\n    if (!params) return this.fetchData('get', url);\n    // get请求很有可能会被缓存，所以我们需要给他加一个随机参数\n    const newParams = Object.assign(params, {\n      [`widowmaker${new Date().getTime()}`]: 1\n    });\n    return this.fetchData('get', url, { params: newParams });\n  }\n  /**\n   * post 请求方式\n   * @Params\n   * url 请求地址\n   * params url params eg: a=1&b=2\n   * data 请求体json数据\n   */\n  public post: requestFn = (url, params, data) => {\n    return this.commonRequest('post', url, params, data);\n  };\n  /**\n   * put 请求方式\n   * url 请求地址\n   * params url params eg: a=1&b=2\n   * data 请求体json数据\n   */\n  public put: requestFn = (url, params, data) => {\n    return this.commonRequest('put', url, params, data);\n  };\n  public patch: requestFn = (url, params, data) => {\n    return this.commonRequest('patch', url, params, data);\n  };\n  public delete: requestFn = (url, params, data) => {\n    return this.commonRequest('delete', url, params, data);\n  };\n}\n\nexport default new Http();\n","/Users/miku/code/react/widowmaker/src/utils/md5.ts",[],"/Users/miku/code/react/widowmaker/src/router/index.tsx",["134"],"/Users/miku/code/react/widowmaker/src/layout/index.tsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":20,"column":1,"nodeType":"145","endLine":26,"endColumn":5},{"ruleId":"143","severity":1,"message":"144","line":11,"column":1,"nodeType":"145","endLine":26,"endColumn":3},{"ruleId":"139","severity":1,"message":"146","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"148","line":10,"column":1,"nodeType":"145","endLine":40,"endColumn":2},{"ruleId":"143","severity":1,"message":"148","line":5,"column":1,"nodeType":"145","endLine":15,"endColumn":2},{"ruleId":"139","severity":1,"message":"149","line":1,"column":25,"nodeType":"141","messageId":"142","endLine":1,"endColumn":41},{"ruleId":"139","severity":1,"message":"150","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":9,"column":9,"nodeType":"153","endLine":9,"endColumn":115},{"ruleId":"154","severity":1,"message":"155","line":39,"column":5,"nodeType":"156","endLine":39,"endColumn":44},{"ruleId":"154","severity":1,"message":"157","line":39,"column":5,"nodeType":"156","endLine":39,"endColumn":44,"suggestions":"158"},{"ruleId":"139","severity":1,"message":"159","line":10,"column":3,"nodeType":"141","messageId":"142","endLine":10,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":6,"column":1,"nodeType":"145","endLine":15,"endColumn":3},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'stat' is defined but never used.","'LoginForm' is defined but never used.","Unexpected default export of anonymous function","'promisifyRoutine' is defined but never used.","'extendRoutine' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useMemo was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ConditionalExpression","React Hook useMemo has missing dependencies: 'actions' and 'dispatch'. Either include them or remove the dependency array.",["162"],"'AxiosResponse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},"Update the dependencies array to be: [actions, dispatch]",{"range":"165","text":"166"},[976,1015],"[actions, dispatch]"]